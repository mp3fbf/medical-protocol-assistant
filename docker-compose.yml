# docker-compose.yml for local development
version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: medical_protocol_app
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot-reloading in development
      # Note: node_modules is handled inside the container to avoid platform inconsistencies
      - ./src:/app/src
      - ./public:/app/public
      - ./prisma:/app/prisma # For Prisma schema changes
      - ./components.json:/app/components.json
      - ./next.config.js:/app/next.config.js
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./tsconfig.json:/app/tsconfig.json
      - ./postcss.config.js:/app/postcss.config.js
    environment:
      # Load environment variables from .env.local file
      # Ensure your .env.local is configured correctly
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ORG_ID=${OPENAI_ORG_ID}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_STORAGE_BUCKET_NAME=${SUPABASE_STORAGE_BUCKET_NAME}
      # Add other necessary environment variables
    depends_on:
      - db
    command: pnpm dev # Run development server

  db:
    image: postgres:15-alpine
    container_name: medical_protocol_db
    ports:
      - "54322:5432" # Map to a different host port to avoid conflict if you have local Postgres
    environment:
      POSTGRES_USER: postgres # Matches default in DATABASE_URL example
      POSTGRES_PASSWORD: password # Matches default in DATABASE_URL example
      POSTGRES_DB: medical_protocols # Matches default in DATABASE_URL example
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped

volumes:
  postgres_data: # Persists database data across restarts