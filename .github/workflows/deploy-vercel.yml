# .github/workflows/deploy-vercel.yml
name: CI Checks (Test, Lint) & Vercel Auto-Deploy Trigger

on:
  push:
    branches:
      - main # For Vercel to pick up for production deployment
      - develop # For Vercel to pick up for preview deployment
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened, closed]

# Environment variables here are primarily for the test job if needed,
# Vercel deployment will use variables set in Vercel Project Settings.
env:
  OPENAI_API_KEY: "sk-test-key-for-ci" # Mock key for tests
  NEXTAUTH_SECRET: "ci-nextauth-secret-placeholder"
  NEXTAUTH_URL: "http://localhost:3000" # For local-like test environment
  SUPABASE_URL: "http://localhost:54321" # Mock for tests
  SUPABASE_SERVICE_ROLE_KEY: "mock.supabase.key" # Mock for tests
  DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public" # For test job DB

jobs:
  lint-and-test:
    name: Lint & Unit/Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Generate Prisma Client
        run: pnpm prisma generate
        # DATABASE_URL for generate is taken from job env if needed, but often not for generate itself
      - name: Run Database Migrations (for tests, if any test requires it)
        run: pnpm prisma migrate deploy
        # DATABASE_URL for migrate is taken from job env
      - name: Lint code
        run: pnpm lint
      - name: Run unit and integration tests
        run: pnpm test --run
        # DATABASE_URL for tests is taken from job env

  # The Vercel deployment will now be handled by Vercel's native Git integration.
  # This GitHub Actions workflow primarily serves as a CI check.
  # No Vercel CLI deployment steps are needed here anymore.
  # Vercel will see the push to 'main' or 'develop' (if configured in Vercel project settings)
  # and trigger its own build and deployment process using the `vercel.json` and
  # environment variables set in the Vercel dashboard.