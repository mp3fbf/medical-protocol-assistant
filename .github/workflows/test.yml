# .github/workflows/test.yml
name: Comprehensive Test Suite

on:
  push:
    branches:
      - main # Run on pushes to the main branch

env:
  OPENAI_API_KEY: "sk-test-key-for-ci"
  NEXTAUTH_SECRET: "ci-nextauth-secret-placeholder"
  NEXTAUTH_URL: "http://localhost:3000"
  # SUPABASE variables are not critical for tests as they are mocked or not directly hit
  SUPABASE_URL: "http://localhost:54321"
  SUPABASE_SERVICE_ROLE_KEY: "mock.supabase.key"

jobs:
  test-all:
    name: Lint, Unit, Integration, Build & E2E Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"

      - name: Run Database Migrations
        run: pnpm prisma migrate deploy
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"
          
      - name: Lint code
        run: pnpm lint

      - name: Run unit and integration tests
        run: pnpm test --run
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"

      - name: Build Next.js application
        run: pnpm build
        env:
          DATABASE_URL: "postgresql://placeholder_user:placeholder_password@placeholder_host:5432/placeholder_db" # Build may not need real DB

      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps

      - name: Run E2E tests (Playwright)
        run: pnpm test:e2e
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"
          # NEXTAUTH_URL is crucial for Playwright if it hits the server
          # It's already set in the job's env.

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always() # Upload on success or failure
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30